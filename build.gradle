buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'antlr'


group 'io.pronto.langsandbox'
version '1.0-SNAPSHOT'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

configurations {
    providedRuntime
}

repositories {
    mavenLocal()
    mavenCentral()
}

jar {
    baseName = project.property('baseName')
}

bootRepackage {
    mainClass = 'me.pronto.Application'
}

dependencies {
    compile("org.projectlombok:lombok:1.16.16")
    compile("org.springframework.boot:spring-boot-starter-actuator")

    antlr "org.antlr:antlr4:4.7"
    compile "org.antlr:antlr4-runtime:4.7"

    testCompile("junit:junit")
    testCompile("org.springframework:spring-test")
    testCompile("org.mockito:mockito-core:2.7.22")

}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ['-package', 'me.interair.lexer.mr']
    outputDirectory = new File("${buildDir}/generated/src/me/interair/lexer/mr".toString())
}
compileJava.dependsOn generateGrammarSource

sourceSets {
    generated {
        java.srcDir "${buildDir}/generated/src/"
    }
}
compileJava.source sourceSets.generated.java, sourceSets.main.java

clean {
    delete "${buildDir}/generated/src/java/"
}

idea {
    module {
        sourceDirs += file("${buildDir}/generated/src/")
    }

}